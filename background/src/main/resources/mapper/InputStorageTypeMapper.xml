<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.InputStorageTypeMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.InputStorageType" >
    <id column="ist_id" property="istId" jdbcType="VARCHAR" />
    <result column="ist_name" property="istName" jdbcType="VARCHAR" />
    <result column="ist_engname" property="istEngname" jdbcType="VARCHAR" />
    <result column="ist_remark" property="istRemark" jdbcType="VARCHAR" />
    <result column="ist_auditing" property="istAuditing" jdbcType="VARCHAR" />
    <result column="ist_yn" property="istYn" jdbcType="VARCHAR" />
    <result column="ist_custom1" property="istCustom1" jdbcType="VARCHAR" />
    <result column="ist_custom2" property="istCustom2" jdbcType="VARCHAR" />
    <result column="ist_custom3" property="istCustom3" jdbcType="VARCHAR" />
    <result column="ist_custom4" property="istCustom4" jdbcType="VARCHAR" />
    <result column="ist_custom5" property="istCustom5" jdbcType="VARCHAR" />
    <result column="ist_custom6" property="istCustom6" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ist_id, ist_name, ist_engname, ist_remark, ist_auditing, ist_yn, ist_custom1, ist_custom2, 
    ist_custom3, ist_custom4, ist_custom5, ist_custom6
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.InputStorageTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from input_storage_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from input_storage_type
    where ist_id = #{istId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from input_storage_type
    where ist_id = #{istId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.InputStorageTypeExample" >
    delete from input_storage_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.InputStorageType" >
    insert into input_storage_type (ist_id, ist_name, ist_engname, 
      ist_remark, ist_auditing, ist_yn, 
      ist_custom1, ist_custom2, ist_custom3, 
      ist_custom4, ist_custom5, ist_custom6
      )
    values (#{istId,jdbcType=VARCHAR}, #{istName,jdbcType=VARCHAR}, #{istEngname,jdbcType=VARCHAR}, 
      #{istRemark,jdbcType=VARCHAR}, #{istAuditing,jdbcType=VARCHAR}, #{istYn,jdbcType=VARCHAR}, 
      #{istCustom1,jdbcType=VARCHAR}, #{istCustom2,jdbcType=VARCHAR}, #{istCustom3,jdbcType=VARCHAR}, 
      #{istCustom4,jdbcType=VARCHAR}, #{istCustom5,jdbcType=VARCHAR}, #{istCustom6,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.InputStorageType" >
    insert into input_storage_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="istId != null" >
        ist_id,
      </if>
      <if test="istName != null" >
        ist_name,
      </if>
      <if test="istEngname != null" >
        ist_engname,
      </if>
      <if test="istRemark != null" >
        ist_remark,
      </if>
      <if test="istAuditing != null" >
        ist_auditing,
      </if>
      <if test="istYn != null" >
        ist_yn,
      </if>
      <if test="istCustom1 != null" >
        ist_custom1,
      </if>
      <if test="istCustom2 != null" >
        ist_custom2,
      </if>
      <if test="istCustom3 != null" >
        ist_custom3,
      </if>
      <if test="istCustom4 != null" >
        ist_custom4,
      </if>
      <if test="istCustom5 != null" >
        ist_custom5,
      </if>
      <if test="istCustom6 != null" >
        ist_custom6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="istId != null" >
        #{istId,jdbcType=VARCHAR},
      </if>
      <if test="istName != null" >
        #{istName,jdbcType=VARCHAR},
      </if>
      <if test="istEngname != null" >
        #{istEngname,jdbcType=VARCHAR},
      </if>
      <if test="istRemark != null" >
        #{istRemark,jdbcType=VARCHAR},
      </if>
      <if test="istAuditing != null" >
        #{istAuditing,jdbcType=VARCHAR},
      </if>
      <if test="istYn != null" >
        #{istYn,jdbcType=VARCHAR},
      </if>
      <if test="istCustom1 != null" >
        #{istCustom1,jdbcType=VARCHAR},
      </if>
      <if test="istCustom2 != null" >
        #{istCustom2,jdbcType=VARCHAR},
      </if>
      <if test="istCustom3 != null" >
        #{istCustom3,jdbcType=VARCHAR},
      </if>
      <if test="istCustom4 != null" >
        #{istCustom4,jdbcType=VARCHAR},
      </if>
      <if test="istCustom5 != null" >
        #{istCustom5,jdbcType=VARCHAR},
      </if>
      <if test="istCustom6 != null" >
        #{istCustom6,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.InputStorageTypeExample" resultType="java.lang.Integer" >
    select count(*) from input_storage_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update input_storage_type
    <set >
      <if test="record.istId != null" >
        ist_id = #{record.istId,jdbcType=VARCHAR},
      </if>
      <if test="record.istName != null" >
        ist_name = #{record.istName,jdbcType=VARCHAR},
      </if>
      <if test="record.istEngname != null" >
        ist_engname = #{record.istEngname,jdbcType=VARCHAR},
      </if>
      <if test="record.istRemark != null" >
        ist_remark = #{record.istRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.istAuditing != null" >
        ist_auditing = #{record.istAuditing,jdbcType=VARCHAR},
      </if>
      <if test="record.istYn != null" >
        ist_yn = #{record.istYn,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom1 != null" >
        ist_custom1 = #{record.istCustom1,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom2 != null" >
        ist_custom2 = #{record.istCustom2,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom3 != null" >
        ist_custom3 = #{record.istCustom3,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom4 != null" >
        ist_custom4 = #{record.istCustom4,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom5 != null" >
        ist_custom5 = #{record.istCustom5,jdbcType=VARCHAR},
      </if>
      <if test="record.istCustom6 != null" >
        ist_custom6 = #{record.istCustom6,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update input_storage_type
    set ist_id = #{record.istId,jdbcType=VARCHAR},
      ist_name = #{record.istName,jdbcType=VARCHAR},
      ist_engname = #{record.istEngname,jdbcType=VARCHAR},
      ist_remark = #{record.istRemark,jdbcType=VARCHAR},
      ist_auditing = #{record.istAuditing,jdbcType=VARCHAR},
      ist_yn = #{record.istYn,jdbcType=VARCHAR},
      ist_custom1 = #{record.istCustom1,jdbcType=VARCHAR},
      ist_custom2 = #{record.istCustom2,jdbcType=VARCHAR},
      ist_custom3 = #{record.istCustom3,jdbcType=VARCHAR},
      ist_custom4 = #{record.istCustom4,jdbcType=VARCHAR},
      ist_custom5 = #{record.istCustom5,jdbcType=VARCHAR},
      ist_custom6 = #{record.istCustom6,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.InputStorageType" >
    update input_storage_type
    <set >
      <if test="istName != null" >
        ist_name = #{istName,jdbcType=VARCHAR},
      </if>
      <if test="istEngname != null" >
        ist_engname = #{istEngname,jdbcType=VARCHAR},
      </if>
      <if test="istRemark != null" >
        ist_remark = #{istRemark,jdbcType=VARCHAR},
      </if>
      <if test="istAuditing != null" >
        ist_auditing = #{istAuditing,jdbcType=VARCHAR},
      </if>
      <if test="istYn != null" >
        ist_yn = #{istYn,jdbcType=VARCHAR},
      </if>
      <if test="istCustom1 != null" >
        ist_custom1 = #{istCustom1,jdbcType=VARCHAR},
      </if>
      <if test="istCustom2 != null" >
        ist_custom2 = #{istCustom2,jdbcType=VARCHAR},
      </if>
      <if test="istCustom3 != null" >
        ist_custom3 = #{istCustom3,jdbcType=VARCHAR},
      </if>
      <if test="istCustom4 != null" >
        ist_custom4 = #{istCustom4,jdbcType=VARCHAR},
      </if>
      <if test="istCustom5 != null" >
        ist_custom5 = #{istCustom5,jdbcType=VARCHAR},
      </if>
      <if test="istCustom6 != null" >
        ist_custom6 = #{istCustom6,jdbcType=VARCHAR},
      </if>
    </set>
    where ist_id = #{istId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.InputStorageType" >
    update input_storage_type
    set ist_name = #{istName,jdbcType=VARCHAR},
      ist_engname = #{istEngname,jdbcType=VARCHAR},
      ist_remark = #{istRemark,jdbcType=VARCHAR},
      ist_auditing = #{istAuditing,jdbcType=VARCHAR},
      ist_yn = #{istYn,jdbcType=VARCHAR},
      ist_custom1 = #{istCustom1,jdbcType=VARCHAR},
      ist_custom2 = #{istCustom2,jdbcType=VARCHAR},
      ist_custom3 = #{istCustom3,jdbcType=VARCHAR},
      ist_custom4 = #{istCustom4,jdbcType=VARCHAR},
      ist_custom5 = #{istCustom5,jdbcType=VARCHAR},
      ist_custom6 = #{istCustom6,jdbcType=VARCHAR}
    where ist_id = #{istId,jdbcType=VARCHAR}
  </update>
</mapper>