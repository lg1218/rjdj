<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.accp.mapper.BankTypeMapper" >
  <resultMap id="BaseResultMap" type="com.accp.domain.BankType" >
    <id column="bt_id" property="btId" jdbcType="VARCHAR" />
    <result column="bt_name" property="btName" jdbcType="VARCHAR" />
    <result column="bt_english_name" property="btEnglishName" jdbcType="VARCHAR" />
    <result column="bt_remark" property="btRemark" jdbcType="VARCHAR" />
    <result column="bt_Auditing" property="btAuditing" jdbcType="VARCHAR" />
    <result column="bt_yn" property="btYn" jdbcType="VARCHAR" />
    <result column="bt_custom1" property="btCustom1" jdbcType="VARCHAR" />
    <result column="bt_custom2" property="btCustom2" jdbcType="VARCHAR" />
    <result column="bt_custom3" property="btCustom3" jdbcType="VARCHAR" />
    <result column="bt_custom4" property="btCustom4" jdbcType="VARCHAR" />
    <result column="bt_custom5" property="btCustom5" jdbcType="VARCHAR" />
    <result column="bt_custom6" property="btCustom6" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bt_id, bt_name, bt_english_name, bt_remark, bt_Auditing, bt_yn, bt_custom1, bt_custom2, 
    bt_custom3, bt_custom4, bt_custom5, bt_custom6
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.accp.domain.BankTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bank_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bank_type
    where bt_id = #{btId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bank_type
    where bt_id = #{btId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.accp.domain.BankTypeExample" >
    delete from bank_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.accp.domain.BankType" >
    insert into bank_type (bt_id, bt_name, bt_english_name, 
      bt_remark, bt_Auditing, bt_yn, 
      bt_custom1, bt_custom2, bt_custom3, 
      bt_custom4, bt_custom5, bt_custom6
      )
    values (#{btId,jdbcType=VARCHAR}, #{btName,jdbcType=VARCHAR}, #{btEnglishName,jdbcType=VARCHAR}, 
      #{btRemark,jdbcType=VARCHAR}, #{btAuditing,jdbcType=VARCHAR}, #{btYn,jdbcType=VARCHAR}, 
      #{btCustom1,jdbcType=VARCHAR}, #{btCustom2,jdbcType=VARCHAR}, #{btCustom3,jdbcType=VARCHAR}, 
      #{btCustom4,jdbcType=VARCHAR}, #{btCustom5,jdbcType=VARCHAR}, #{btCustom6,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.accp.domain.BankType" >
    insert into bank_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="btId != null" >
        bt_id,
      </if>
      <if test="btName != null" >
        bt_name,
      </if>
      <if test="btEnglishName != null" >
        bt_english_name,
      </if>
      <if test="btRemark != null" >
        bt_remark,
      </if>
      <if test="btAuditing != null" >
        bt_Auditing,
      </if>
      <if test="btYn != null" >
        bt_yn,
      </if>
      <if test="btCustom1 != null" >
        bt_custom1,
      </if>
      <if test="btCustom2 != null" >
        bt_custom2,
      </if>
      <if test="btCustom3 != null" >
        bt_custom3,
      </if>
      <if test="btCustom4 != null" >
        bt_custom4,
      </if>
      <if test="btCustom5 != null" >
        bt_custom5,
      </if>
      <if test="btCustom6 != null" >
        bt_custom6,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="btId != null" >
        #{btId,jdbcType=VARCHAR},
      </if>
      <if test="btName != null" >
        #{btName,jdbcType=VARCHAR},
      </if>
      <if test="btEnglishName != null" >
        #{btEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="btRemark != null" >
        #{btRemark,jdbcType=VARCHAR},
      </if>
      <if test="btAuditing != null" >
        #{btAuditing,jdbcType=VARCHAR},
      </if>
      <if test="btYn != null" >
        #{btYn,jdbcType=VARCHAR},
      </if>
      <if test="btCustom1 != null" >
        #{btCustom1,jdbcType=VARCHAR},
      </if>
      <if test="btCustom2 != null" >
        #{btCustom2,jdbcType=VARCHAR},
      </if>
      <if test="btCustom3 != null" >
        #{btCustom3,jdbcType=VARCHAR},
      </if>
      <if test="btCustom4 != null" >
        #{btCustom4,jdbcType=VARCHAR},
      </if>
      <if test="btCustom5 != null" >
        #{btCustom5,jdbcType=VARCHAR},
      </if>
      <if test="btCustom6 != null" >
        #{btCustom6,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.accp.domain.BankTypeExample" resultType="java.lang.Integer" >
    select count(*) from bank_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bank_type
    <set >
      <if test="record.btId != null" >
        bt_id = #{record.btId,jdbcType=VARCHAR},
      </if>
      <if test="record.btName != null" >
        bt_name = #{record.btName,jdbcType=VARCHAR},
      </if>
      <if test="record.btEnglishName != null" >
        bt_english_name = #{record.btEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="record.btRemark != null" >
        bt_remark = #{record.btRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.btAuditing != null" >
        bt_Auditing = #{record.btAuditing,jdbcType=VARCHAR},
      </if>
      <if test="record.btYn != null" >
        bt_yn = #{record.btYn,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom1 != null" >
        bt_custom1 = #{record.btCustom1,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom2 != null" >
        bt_custom2 = #{record.btCustom2,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom3 != null" >
        bt_custom3 = #{record.btCustom3,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom4 != null" >
        bt_custom4 = #{record.btCustom4,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom5 != null" >
        bt_custom5 = #{record.btCustom5,jdbcType=VARCHAR},
      </if>
      <if test="record.btCustom6 != null" >
        bt_custom6 = #{record.btCustom6,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bank_type
    set bt_id = #{record.btId,jdbcType=VARCHAR},
      bt_name = #{record.btName,jdbcType=VARCHAR},
      bt_english_name = #{record.btEnglishName,jdbcType=VARCHAR},
      bt_remark = #{record.btRemark,jdbcType=VARCHAR},
      bt_Auditing = #{record.btAuditing,jdbcType=VARCHAR},
      bt_yn = #{record.btYn,jdbcType=VARCHAR},
      bt_custom1 = #{record.btCustom1,jdbcType=VARCHAR},
      bt_custom2 = #{record.btCustom2,jdbcType=VARCHAR},
      bt_custom3 = #{record.btCustom3,jdbcType=VARCHAR},
      bt_custom4 = #{record.btCustom4,jdbcType=VARCHAR},
      bt_custom5 = #{record.btCustom5,jdbcType=VARCHAR},
      bt_custom6 = #{record.btCustom6,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.accp.domain.BankType" >
    update bank_type
    <set >
      <if test="btName != null" >
        bt_name = #{btName,jdbcType=VARCHAR},
      </if>
      <if test="btEnglishName != null" >
        bt_english_name = #{btEnglishName,jdbcType=VARCHAR},
      </if>
      <if test="btRemark != null" >
        bt_remark = #{btRemark,jdbcType=VARCHAR},
      </if>
      <if test="btAuditing != null" >
        bt_Auditing = #{btAuditing,jdbcType=VARCHAR},
      </if>
      <if test="btYn != null" >
        bt_yn = #{btYn,jdbcType=VARCHAR},
      </if>
      <if test="btCustom1 != null" >
        bt_custom1 = #{btCustom1,jdbcType=VARCHAR},
      </if>
      <if test="btCustom2 != null" >
        bt_custom2 = #{btCustom2,jdbcType=VARCHAR},
      </if>
      <if test="btCustom3 != null" >
        bt_custom3 = #{btCustom3,jdbcType=VARCHAR},
      </if>
      <if test="btCustom4 != null" >
        bt_custom4 = #{btCustom4,jdbcType=VARCHAR},
      </if>
      <if test="btCustom5 != null" >
        bt_custom5 = #{btCustom5,jdbcType=VARCHAR},
      </if>
      <if test="btCustom6 != null" >
        bt_custom6 = #{btCustom6,jdbcType=VARCHAR},
      </if>
    </set>
    where bt_id = #{btId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.accp.domain.BankType" >
    update bank_type
    set bt_name = #{btName,jdbcType=VARCHAR},
      bt_english_name = #{btEnglishName,jdbcType=VARCHAR},
      bt_remark = #{btRemark,jdbcType=VARCHAR},
      bt_Auditing = #{btAuditing,jdbcType=VARCHAR},
      bt_yn = #{btYn,jdbcType=VARCHAR},
      bt_custom1 = #{btCustom1,jdbcType=VARCHAR},
      bt_custom2 = #{btCustom2,jdbcType=VARCHAR},
      bt_custom3 = #{btCustom3,jdbcType=VARCHAR},
      bt_custom4 = #{btCustom4,jdbcType=VARCHAR},
      bt_custom5 = #{btCustom5,jdbcType=VARCHAR},
      bt_custom6 = #{btCustom6,jdbcType=VARCHAR}
    where bt_id = #{btId,jdbcType=VARCHAR}
  </update>
</mapper>